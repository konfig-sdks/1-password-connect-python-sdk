# coding: utf-8

"""
    1Password Connect

    REST API interface for 1Password Connect.

    The version of the OpenAPI document: 1.5.7
    Contact: support@1password.com
    Created by: https://support.1password.com/
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from 1_password_connect_python_sdk import schemas  # noqa: F401


class APIRequestResource(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            
            
            class type(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def ITEM(cls):
                    return cls("ITEM")
                
                @schemas.classproperty
                def VAULT(cls):
                    return cls("VAULT")
        
            @staticmethod
            def vault() -> typing.Type['APIRequestResourceVault']:
                return APIRequestResourceVault
        
            @staticmethod
            def item() -> typing.Type['APIRequestResourceItem']:
                return APIRequestResourceItem
            itemVersion = schemas.IntSchema
            __annotations__ = {
                "type": type,
                "vault": vault,
                "item": item,
                "itemVersion": itemVersion,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["type"]) -> MetaOapg.properties.type: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["vault"]) -> 'APIRequestResourceVault': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["item"]) -> 'APIRequestResourceItem': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["itemVersion"]) -> MetaOapg.properties.itemVersion: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["type", "vault", "item", "itemVersion", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["type"]) -> typing.Union[MetaOapg.properties.type, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["vault"]) -> typing.Union['APIRequestResourceVault', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["item"]) -> typing.Union['APIRequestResourceItem', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["itemVersion"]) -> typing.Union[MetaOapg.properties.itemVersion, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["type", "vault", "item", "itemVersion", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        type: typing.Union[MetaOapg.properties.type, str, schemas.Unset] = schemas.unset,
        vault: typing.Union['APIRequestResourceVault', schemas.Unset] = schemas.unset,
        item: typing.Union['APIRequestResourceItem', schemas.Unset] = schemas.unset,
        itemVersion: typing.Union[MetaOapg.properties.itemVersion, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'APIRequestResource':
        return super().__new__(
            cls,
            *args,
            type=type,
            vault=vault,
            item=item,
            itemVersion=itemVersion,
            _configuration=_configuration,
            **kwargs,
        )

from 1_password_connect_python_sdk.model.api_request_resource_item import APIRequestResourceItem
from 1_password_connect_python_sdk.model.api_request_resource_vault import APIRequestResourceVault
